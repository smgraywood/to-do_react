{"ast":null,"code":"var _jsxFileName = \"/Users/techtonica/Desktop/Techtonica/to-do-react/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // props.onSubmit({\n    //     id: Math.floor(Math.random() * 10000), \n    //     text: input\n    // });\n\n    setInput = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TodoForm, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/techtonica/Desktop/Techtonica/to-do-react/src/components/TodoForm.js"],"names":["React","useState","TodoForm","props","input","setInput","handleChange","e","target","value","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACtBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAEH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF,GADqB,CAGrB;AACA;AACA;AACA;;AACAN,IAAAA,QAAQ,GAAI,EAAZ;AACH,GARD;;AAUI,sBACO;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAIK,YAAxC;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,WAAW,EAAC,YADZ;AAEA,MAAA,KAAK,EAAEN,KAFP;AAEc,MAAA,IAAI,EAAG,MAFrB;AAGA,MAAA,SAAS,EAAE,YAHX;AAIA,MAAA,QAAQ,EAAEE;AAJV;AAAA;AAAA;AAAA;AAAA,YADJ,eAOA;AAAQ,MAAA,SAAS,EAAE,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAWH;;GA5BQJ,Q;;KAAAA,Q;AA8BT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\n\nfunction TodoForm(props) {\nconst [input, setInput] = useState('')\n\nconst handleChange = e => {\n    setInput(e.target.value);\n}\n\nconst handleSubmit= e => {\n    e.preventDefault();\n\n    // props.onSubmit({\n    //     id: Math.floor(Math.random() * 10000), \n    //     text: input\n    // });\n    setInput = (\"\");\n};\n\n    return (\n           <form className=\"todo-form\" onSubmit = {handleSubmit}>\n               <input type=\"text\" \n               placeholder=\"Add a todo\" \n               value={input} name = \"text\" \n               className= \"todo-input\" \n               onChange={handleChange}\n               />\n           <button className =\"todo-button\">Add todo</button>\n           </form>\n    )\n}\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}