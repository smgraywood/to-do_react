{"ast":null,"code":"var _jsxFileName = \"/Users/techtonica/Desktop/Techtonica/to-do-react/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodos\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"4If+zfaJHUD7Ut+o/SS78JfNcmA=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/techtonica/Desktop/Techtonica/to-do-react/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodos","edit","setEdit","id","value","completeTodo","updatedTodos","map","todo","isComplete","setTodos","index","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAd,EAAuC;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC7BS,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGF,EAAE,IAAI;AACvB,QAAIG,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAGA,IAAI,CAACL,EAAL,KAAYA,EAAf,EAAmB;AACfK,QAAAA,IAAI,CAACC,UAAL,GAAkB,CAACD,IAAI,CAACC,UAAxB;AACH;;AACD,aAAOD,IAAP;AACH,KALkB,CAAnB;AAMAE,IAAAA,QAAQ,CAACJ,YAAD,CAAR;AACH,GARD;;AAUA,SAAOP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOG,KAAP,kBACb;AACA,IAAA,SAAS,EAAIH,IAAI,CAACC,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;AAAA,4BAII;AAAqB,MAAA,OAAO,EAAE,MAAMJ,YAAY,CAACG,IAAI,CAACL,EAAN,CAAhD;AAAA,gBACKK,IAAI,CAACI;AADV,OAAYJ,IAAI,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,KAEKQ,KAFL;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAeH;;GA/BQb,I;;KAAAA,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\n\nfunction Todo({todos, completeTodos }) {\n    const [edit, setEdit] = useState({\n        id: null, \n        value: ''\n    });\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if(todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos);\n    }\n\n    return todos.map((todo, index) => (\n        <div \n        className = {todo.isComplete ? 'todo-row complete' : 'todo-row'} \n        key={index}\n        >\n            <div key = {todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n        </div>\n        <div className='icons'>\n            <RiCloseCircleLine />\n            <TiEdit />\n        </div>\n\n        </div>\n))\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}